from flask import Flask, render_template, request, redirect, url_for, flash, session
from flask_sqlalchemy import SQLAlchemy
import os

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
app = Flask(__name__)
app.secret_key = "supersecret"  # –ª—É—á—à–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π –∫–ª—é—á

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite ---
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# --- –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—è–º–∏ ---
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(150), unique=True, nullable=False)
    password = db.Column(db.String(150), nullable=False)
    role = db.Column(db.String(20), default='client')  # client, manager, admin
    is_active = db.Column(db.Boolean, default=True)
    created_by = db.Column(db.String(150))  # –ö—Ç–æ —Å–æ–∑–¥–∞–ª –∞–∫–∫–∞—É–Ω—Ç (–¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤)

# --- –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ ---
with app.app_context():
    db.create_all()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not User.query.filter_by(role='admin').first():
        admin = User(
            username='admin',
            password='admin123',
            role='admin'
        )
        db.session.add(admin)
        db.session.commit()
        print("üîê –°–æ–∑–¥–∞–Ω –Ω–∞—á–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω: admin / admin123")

# --- –ú–∞—Ä—à—Ä—É—Ç—ã ---
@app.route('/')
def index():
    user = session.get('user', None)
    role = session.get('role', None)
    return render_template('index.html', user=user, role=role)

@app.route('/small_business')
def small_business():
    return render_template('small_business.html')

@app.route('/big_business')
def big_business():
    return render_template('big_business.html')

@app.route('/news')
def news():
    return render_template('news.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == "POST":
        username = request.form["username"]
        password = request.form["password"]

        if User.query.filter_by(username=username).first():
            flash("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return redirect(url_for("register"))

        new_user = User(username=username, password=password, role='client')
        db.session.add(new_user)
        db.session.commit()

        flash("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!", "success")
        return redirect(url_for("index"))

    return render_template("register.html")

@app.route('/login', methods=['POST'])
def login():
    username = request.form['username']
    password = request.form['password']
    user = User.query.filter_by(username=username, password=password).first()
    
    if user and user.is_active:
        session['user'] = user.username
        session['role'] = user.role
        flash(f"–ü—Ä–∏–≤–µ—Ç, {user.username}! (–†–æ–ª—å: {user.role})", "success")
        print(f"üîê –í—Ö–æ–¥: {username} —Å —Ä–æ–ª—å—é {user.role}")
        
        # –†–µ–¥–∏—Ä–µ–∫—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if user.role == 'admin':
            return redirect(url_for('admin_panel'))
        elif user.role == 'manager':
            return redirect(url_for('manager_panel'))
        else:
            return redirect(url_for('index'))
    else:
        flash("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!", "error")
        return redirect(url_for('index'))

# --- –í—ã—Ö–æ–¥ ---
@app.route('/logout')
def logout():
    username = session.get('user')
    session.clear()
    flash(f"–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞!", "info")
    return redirect(url_for('index'))

# --- –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å ---
@app.route('/admin')
def admin_panel():
    if session.get('role') != 'admin':
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", "error")
        return redirect(url_for('index'))
    
    users = User.query.all()
    return render_template('admin.html', users=users)

# --- –ü–∞–Ω–µ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ---
@app.route('/manager')
def manager_panel():
    if session.get('role') != 'manager':
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", "error")
        return redirect(url_for('index'))
    
    return render_template('manager.html')

# --- –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω) ---
@app.route('/admin/create_manager', methods=['POST'])
def create_manager():
    if session.get('role') != 'admin':
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", "error")
        return redirect(url_for('index'))
    
    username = request.form['username']
    password = request.form['password']
    role = request.form.get('role', 'manager')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–µ–Ω–µ–¥–∂–µ—Ä
    
    if User.query.filter_by(username=username).first():
        flash("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!", "error")
        return redirect(url_for('admin_panel'))
    
    new_user = User(
        username=username,
        password=password,
        role=role,
        created_by=session['user']
    )
    db.session.add(new_user)
    db.session.commit()
    
    flash(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —Å–æ–∑–¥–∞–Ω —Å —Ä–æ–ª—å—é {role}!", "success")
    return redirect(url_for('admin_panel'))

# --- –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
@app.route('/admin/toggle_user', methods=['POST'])
def toggle_user():
    if session.get('role') != 'admin':
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", "error")
        return redirect(url_for('index'))
    
    user_id = request.form['user_id']
    user = User.query.get(user_id)
    
    if user and user.role != 'admin':  # –ù–µ–ª—å–∑—è –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–æ–≤
        user.is_active = not user.is_active
        db.session.commit()
        flash(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} {'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' if not user.is_active else '–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω'}!", "success")
    
    return redirect(url_for('admin_panel'))

@app.route('/admin/change_role', methods=['POST'])
def change_role():
    if session.get('role') != 'admin':
        flash("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!", "error")
        return redirect(url_for('index'))
    
    user_id = request.form['user_id']
    new_role = request.form['new_role']
    user = User.query.get(user_id)
    
    if user:
        # –ó–∞–ø—Ä–µ—â–∞–µ–º –º–µ–Ω—è—Ç—å —Ä–æ–ª—å –æ—Å–Ω–æ–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É admin
        if user.username == 'admin':
            flash("–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", "error")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å —Ç–µ–∫—É—â–µ–≥–æ –∞–¥–º–∏–Ω–∞
        elif user.username == session.get('user'):
            flash("–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–æ–ª—å!", "error")
        else:
            user.role = new_role
            db.session.commit()
            flash(f"–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username} –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {new_role}!", "success")
    
    return redirect(url_for('admin_panel'))

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    app.run(debug=True)